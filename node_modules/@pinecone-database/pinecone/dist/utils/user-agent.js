"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildUserAgent = void 0;
var fs = __importStar(require("fs"));
var os = __importStar(require("os"));
var packageJson = JSON.parse(fs.readFileSync('./package.json', 'utf8'));
var buildUserAgent = function (isLegacy) {
    // We always want to include the package name and version
    // along with the langauge name to help distinguish these
    // requests from those emitted by other clients
    var userAgentParts = [
        "".concat(packageJson.name, " v").concat(packageJson.version),
        'lang=typescript',
    ];
    // If available, capture information about the OS
    if (os && os.release && os.platform && os.arch) {
        var platform = os.platform();
        var platformVersion = os.release();
        var arch = os.arch();
        userAgentParts.push("".concat(platform, " ").concat(platformVersion, ", ").concat(arch));
    }
    // If available, capture information about the Node.js version
    if (process && process.version) {
        userAgentParts.push("node ".concat(process.version));
    }
    // Use this flag to identify whether they are using the v0 legacy
    // client export called PineconeClient
    userAgentParts.push("legacyExport=".concat(isLegacy));
    return userAgentParts.join('; ');
};
exports.buildUserAgent = buildUserAgent;
//# sourceMappingURL=user-agent.js.map